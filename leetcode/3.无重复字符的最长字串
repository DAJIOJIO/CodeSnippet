/*
 *示例 1:

 *输入: s = "abcabcbb"
 *输出: 3 
 *解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
 *示例 2:
 *
 *输入: s = "bbbbb"
 *输出: 1
 *解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
 *示例 3:
 *
 *输入: s = "pwwkew"
 *输出: 3
 *解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
 *请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

*/
class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashMap sub = new HashMap();
        int longestSize = 0;
        for(int i=0; i < s.length(); i++) {
            for(int j = i; j< s.length(); j++ ){
                if(sub.get(s.charAt(j)) == null){
                    sub.put(s.charAt(j), j);
                }else{
                    if(sub.size() > longestSize){
                        longestSize = sub.size();
                    }
                    sub.clear();
                    break;
                }
            }

        }
        if(sub.size() > longestSize){
            longestSize = sub.size();
        }
        return longestSize;
    }
}
